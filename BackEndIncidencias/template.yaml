AWSTemplateFormatVersion: '2010-09-09'
Transform: AWS::Serverless-2016-10-31
Description: >
  BackEndIncidencias

Globals:
  Function:
    Timeout: 3
    Runtime: python3.11
    Architectures:
      - x86_64

Resources:

  CreateIncidenceFunction:
    Type: 'AWS::Serverless::Function'
    Properties:
      CodeUri: create_incidence/
      Handler: app.lambda_handler
      Events:
        CreateIncidence:
          Type: Api
          Properties:
            Path: /create_incidence
            Method: post
      Environment:
        Variables:
          MY_SECRET_NAME: "secretsmanager"
          MY_AWS_REGION: "us-east-1"
          S3_BUCKET: "imagesincidence"
      Policies:
        - AWSLambdaBasicExecutionRole
        - Version: '2012-10-17'
          Statement:
            - Effect: Allow
              Action: secretsmanager:GetSecretValue
              Resource: "arn:aws:secretsmanager:us-east-1:767398143513:secret:secretsmanager-SBv4PE"  # Asegúrate de reemplazar con el ARN real de tu secreto

  CreateUserFunction:
    Type: 'AWS::Serverless::Function'
    Properties:
      CodeUri: create_user/
      Handler: app.lambda_handler
      Events:
        CreateIncidence:
          Type: Api
          Properties:
            Path: /create_user
            Method: post
      Environment:
        Variables:
          MY_SECRET_NAME: "secretsmanager"
          MY_AWS_REGION: "us-east-1"
          S3_BUCKET: "imagesincidence"
      Policies:
        - AWSLambdaBasicExecutionRole
        - Version: '2012-10-17'
          Statement:
            - Effect: Allow
              Action: secretsmanager:GetSecretValue
              Resource: "arn:aws:secretsmanager:us-east-1:767398143513:secret:secretsmanager-SBv4PE"  # Asegúrate de reemplazar con el ARN real de tu secreto

  ReadOneIncidenceFunction:
    Type: 'AWS::Serverless::Function'
    Properties:
      CodeUri: read_one_incidence/
      Handler: app.lambda_handler
      Events:
        GetOneIncidence:
          Type: Api
          Properties:
            Path: /read_one_incidence/{reporte_id}
            Method: get
      Environment:
        Variables:
          MY_SECRET_NAME: "secretsmanager"
          MY_AWS_REGION: "us-east-1"
          S3_BUCKET: "imagesincidence"
      Policies:
        - AWSLambdaBasicExecutionRole
        - Version: '2012-10-17'
          Statement:
            - Effect: Allow
              Action: secretsmanager:GetSecretValue
              Resource: "arn:aws:secretsmanager:us-east-1:767398143513:secret:secretsmanager-SBv4PE"  # Asegúrate de reemplazar con el ARN real de tu secreto

  ReadAllIncidenceFunction:
    Type: 'AWS::Serverless::Function'
    Properties:
      CodeUri: read_all_incidence/
      Handler: app.lambda_handler
      Events:
        GetAllIncidence:
          Type: Api
          Properties:
            Path: /read_all_incidence
            Method: get
      Environment:
        Variables:
          MY_SECRET_NAME: "secretsmanager"
          MY_AWS_REGION: "us-east-1"
          S3_BUCKET: "imagesincidence"
      Policies:
        - AWSLambdaBasicExecutionRole
        - Version: '2012-10-17'
          Statement:
            - Effect: Allow
              Action: secretsmanager:GetSecretValue
              Resource: "arn:aws:secretsmanager:us-east-1:767398143513:secret:secretsmanager-SBv4PE"  # Asegúrate de reemplazar con el ARN real de tu secreto



  UpdateIncidenceFunction:
    Type: 'AWS::Serverless::Function'
    Properties:
      CodeUri: update_incidence/
      Handler: app.lambda_handler
      Events:
        UpdateIncidence:
          Type: Api
          Properties:
            Path: /update_incidence/{reporte_id}
            Method: put
      Environment:
        Variables:
          MY_SECRET_NAME: "secretsmanager"
          MY_AWS_REGION: "us-east-1"
          S3_BUCKET: "imagesincidence"
      Policies:
        - AWSLambdaBasicExecutionRole
        - Version: '2012-10-17'
          Statement:
            - Effect: Allow
              Action: secretsmanager:GetSecretValue
              Resource: "arn:aws:secretsmanager:us-east-1:767398143513:secret:secretsmanager-SBv4PE"  # Asegúrate de reemplazar con el ARN real de tu secreto

  DeleteIncidenceFunction:
    Type: 'AWS::Serverless::Function'
    Properties:
      CodeUri: delete_incidence/
      Handler: app.lambda_handler
      Events:
        UpdateIncidence:
          Type: Api
          Properties:
            Path: /delete_incidence/{reporte_id}
            Method: delete
      Environment:
        Variables:
          MY_SECRET_NAME: "secretsmanager"
          MY_AWS_REGION: "us-east-1"
          S3_BUCKET: "imagesincidence"
      Policies:
        - AWSLambdaBasicExecutionRole
        - Version: '2012-10-17'
          Statement:
            - Effect: Allow
              Action: secretsmanager:GetSecretValue
              Resource: "arn:aws:secretsmanager:us-east-1:767398143513:secret:secretsmanager-SBv4PE"  # Asegúrate de reemplazar con el ARN real de tu secreto

  ChangesPasswordFunction:
    Type: 'AWS::Serverless::Function'
    Properties:
      CodeUri: set_password/
      Handler: app.lambda_handler
      Runtime: python3.11  # Asegúrate de especificar la versión de Python que estás utilizando
      Events:
        UpdateIncidence:
          Type: Api
          Properties:
            Path: /change_password
            Method: post
      Environment:
        Variables:
          MY_COGNITO_SECRET_NAME: "secretscognito"  # Nombre del secreto en Secrets Manager
          MY_AWS_REGION: "us-east-1"  # Región donde estás ejecutando los servicios
      Policies:
        - AWSLambdaBasicExecutionRole
        - Version: '2012-10-17'
          Statement:
            - Effect: Allow
              Action: secretsmanager:GetSecretValue
              Resource: "arn:aws:secretsmanager:us-east-1:767398143513:secret:secretscognito-DBj1rf"

  LoginFunction:
    Type: 'AWS::Serverless::Function'
    Properties:
      CodeUri: login/
      Handler: app.lambda_handler
      Runtime: python3.11  # Asegúrate de especificar la versión de Python que estás utilizando
      Events:
        UpdateIncidence:
          Type: Api
          Properties:
            Path: /login
            Method: post
      Environment:
        Variables:
          MY_COGNITO_SECRET_NAME: "secretscognito"  # Nombre del secreto en Secrets Manager
          MY_AWS_REGION: "us-east-1"  # Región donde estás ejecutando los servicios
      Policies:
        - AWSLambdaBasicExecutionRole
        - Version: '2012-10-17'
          Statement:
            - Effect: Allow
              Action: secretsmanager:GetSecretValue
              Resource: "arn:aws:secretsmanager:us-east-1:767398143513:secret:secretscognito-DBj1rf"
